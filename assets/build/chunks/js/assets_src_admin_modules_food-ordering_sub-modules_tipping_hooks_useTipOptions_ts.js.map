{"version":3,"file":"chunks/js/assets_src_admin_modules_food-ordering_sub-modules_tipping_hooks_useTipOptions_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACiD;AACjD;AACA;AACA;AACO,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC/B,IAAAC,eAAA,GAAgDF,+DAAc,CAAC,CAAC;IAAxDG,OAAO,GAAAD,eAAA,CAAPC,OAAO;IAAEC,KAAK,GAAAF,eAAA,CAALE,KAAK;IAAEC,QAAQ,GAAAH,eAAA,CAARG,QAAQ;IAAEC,SAAS,GAAAJ,eAAA,CAATI,SAAS;EAC3C,IAAMC,wBAAwB,GAAGH,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAAC,4BAA4B,CAAC;EAClH,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,IAAI,EAAEC,KAAK,EAAK;IAClCL,QAAQ,CAACI,IAAI,EAAEC,KAAK,EAAE;MAClBC,WAAW,EAAE,IAAI;MACjBC,WAAW,EAAE;IACjB,CAAC,CAAC;EACN,CAAC;EACD;EACA,IAAMC,UAAU,GAAG,CAACT,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;EAC7F,IAAMU,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACvB,IAAMC,cAAc,GAAI,CAACT,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAAC,aAAa,CAAC,KAAK,EAAG;IAC/G,IAAMU,IAAI,MAAAC,MAAA,CAAAC,kBAAA,CAAOH,cAAc,IAAE,CAAC,EAAC;IACnCP,YAAY,CAAC,aAAa,EAAEQ,IAAI,CAAC;EACrC,CAAC;EACD,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAAK,EAAK;IAC/B,IAAML,cAAc,GAAG,CAACT,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE;IAC7G,IAAMe,UAAU,GAAGN,cAAc,CAACO,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC;MAAA,OAAKA,CAAC,KAAKJ,KAAK;IAAA,EAAC;IAC/DZ,YAAY,CAAC,aAAa,EAAEa,UAAU,CAAC;EAC3C,CAAC;EACD,OAAO;IACHR,UAAU,EAAVA,UAAU;IACVC,YAAY,EAAZA,YAAY;IACZK,eAAe,EAAfA,eAAe;IACfZ,wBAAwB,EAAxBA,wBAAwB;IACxBJ,OAAO,EAAPA;EACJ,CAAC;AACL,CAAC;AACD,iEAAeF,aAAa,E","sources":["webpack://wp-cafe/./assets/src/admin/modules/food-ordering/sub-modules/tipping/hooks/useTipOptions.ts"],"sourcesContent":["/**\n * External Dependencies\n */\nimport { useFormContext } from \"react-hook-form\";\n/**\n * Custom hook to manage tipping options\n */\nexport const useTipOptions = () => {\n    const { control, watch, setValue, getValues } = useFormContext();\n    const tippingCalculationMethod = watch === null || watch === void 0 ? void 0 : watch(\"tipping_calculation_method\");\n    const safeSetValue = (name, value) => {\n        setValue(name, value, {\n            shouldDirty: true,\n            shouldTouch: true,\n        });\n    };\n    // Get current tip options or initialize as empty array\n    const tipOptions = (watch === null || watch === void 0 ? void 0 : watch(\"tip_options\")) || [];\n    const addTipOption = () => {\n        const currentOptions = ((getValues === null || getValues === void 0 ? void 0 : getValues(\"tip_options\")) || []);\n        const next = [...currentOptions, 0];\n        safeSetValue(\"tip_options\", next);\n    };\n    const removeTipOption = (index) => {\n        const currentOptions = (getValues === null || getValues === void 0 ? void 0 : getValues(\"tip_options\")) || [];\n        const newOptions = currentOptions.filter((_, i) => i !== index);\n        safeSetValue(\"tip_options\", newOptions);\n    };\n    return {\n        tipOptions,\n        addTipOption,\n        removeTipOption,\n        tippingCalculationMethod,\n        control,\n    };\n};\nexport default useTipOptions;\n"],"names":["useFormContext","useTipOptions","_useFormContext","control","watch","setValue","getValues","tippingCalculationMethod","safeSetValue","name","value","shouldDirty","shouldTouch","tipOptions","addTipOption","currentOptions","next","concat","_toConsumableArray","removeTipOption","index","newOptions","filter","_","i"],"sourceRoot":""}